# 
# Annotat3DWeb Base Image
# 
# Contents:
#     Ubuntu version 20.04
#     NVIDIA CUDA version 11.6 including cuBLAS version 11.8.1.74
#     NVIDIA cuDNN version 8.3.2.44
#     NVIDIA NCCL version 2.11.4 (optimized for NVLink)
#     APEX
#     RDMA Core version 36.0
#     TensorBoard version 2.8.0
#     PyTorch version 1.11.0
#     Nsight Compute version 2022.1.0
#     Nsight Systems version 2021.5.2.53
#     TensorRT version 8.2.3
#     DALI version 1.10.0
#     MAGMA version 2.5.2
#     GNU compilers version 9
#     OpenMPI version 4.1.2
#     Mellanox OFED version 5.1-2.5.8.0
#     Node version v20.12.2
#     Annotat3DWeb Dependencies
# 

BootStrap: docker
From: nvcr.io/nvidia/pytorch:22.02-py3
%post
    . /.singularity.d/env/10-docker*.sh

# GCD package repository ID

%environment
    export GCD_PKG_REPO=3702
%post
    export GCD_PKG_REPO=3702

%environment
    export CUDA_HOME=/usr/local/cuda
    export CUDA_TOOLKIT_PATH=$CUDA_HOME
%post
    export CUDA_HOME=/usr/local/cuda
    export CUDA_TOOLKIT_PATH=$CUDA_HOME

%environment
    export CPATH=/usr/include/hdf5/serial/:$CPATH
    export HDF5_INCLUDE_PATH=/usr/include/hdf5/serial/:$HDF5_INCLUDE_PATH
    export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:$LIBRARY_PATH
    export NODE_PATH=$NVM_DIR/v$NODE_VERSION/lib/node_modules
    export PATH=$CUDA_HOME/bin:$CUDA_HOME/nvvm/bin:$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
%post
    export CPATH=/usr/include/hdf5/serial/:$CPATH
    export HDF5_INCLUDE_PATH=/usr/include/hdf5/serial/:$HDF5_INCLUDE_PATH
    export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:$LIBRARY_PATH
    export NODE_PATH=$NVM_DIR/v$NODE_VERSION/lib/node_modules
    export PATH=$CUDA_HOME/bin:$CUDA_HOME/nvvm/bin:$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

%environment
    export NODE_VERSION=20.12.2
    export NVM_DIR=/usr/local/nvm
%post
    export NODE_VERSION=20.12.2
    export NVM_DIR=/usr/local/nvm

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        autoconf \
        autoconf-archive \
        automake \
        binutils \
        build-essential \
        bzip2 \
        ca-certificates \
        cmake \
        coreutils \
        curl \
        doxygen \
        environment-modules \
        expect \
        fontconfig \
        gdb \
        gfortran \
        git \
        gzip \
        ibacm \
        libgl1 \
        libgl1-mesa-dev \
        libglib2.0-0 \
        libhdf5-* \
        libnetcdf-dev \
        libnss3 \
        libopenmpi-dev \
        libssl-dev \
        libtool \
        libxss1 \
        make \
        openjdk-8-jdk \
        openssh-client \
        patch \
        pciutils \
        pkg-config \
        qperf \
        tar \
        tcl \
        unzip \
        vim \
        wget \
        xz-utils \
        zip \
        zlib1g-dev
    rm -rf /var/lib/apt/lists/*

# Mellanox OFED version 5.1-2.5.8.0
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ca-certificates \
        gnupg \
        wget
    rm -rf /var/lib/apt/lists/*
%post
    wget -qO - https://www.mellanox.com/downloads/ofed/RPM-GPG-KEY-Mellanox | apt-key add -
    mkdir -p /etc/apt/sources.list.d && wget -q -nc --no-check-certificate -P /etc/apt/sources.list.d https://linux.mellanox.com/public/repo/mlnx_ofed/5.1-2.5.8.0/ubuntu20.04/mellanox_mlnx_ofed.list
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ibverbs-providers \
        ibverbs-utils \
        libibmad-dev \
        libibmad5 \
        libibumad-dev \
        libibumad3 \
        libibverbs-dev \
        libibverbs1 \
        librdmacm-dev \
        librdmacm1
    rm -rf /var/lib/apt/lists/*

%post
    python3 -m pip config set global.extra-index-url https://gitlab.cnpem.br/api/v4/projects/3702/packages/pypi/simple
    python3 -m pip config set global.trusted-host gitlab.cnpem.br
    conda install -c conda-forge -y mpi4py==3.1.4
    conda clean -afy

# pip
%post
    cd /
    pip3 --no-cache-dir install build cmake-setuptools cmake>=3.18.0 cmake_setup cython==0.29.30 pip>=22.0.4 setuptools>=69.0.3 wheel

# pip
%post
    cd /
    pip3 --no-cache-dir install blinker cbf nibabel SharedArray==3.2.0 sysv_ipc

%post
    conda install -c conda-forge -y mpi4py==3.1.4
    conda clean -afy

%files
    externals/sscIO /opt/sscIO

%post
    cd /opt/sscIO/python
    python3 -m pip install --upgrade pip
    python3 -m pip install -r requirements.txt
    python3 setup.py bdist_wheel

# pip
%files
    backend/requirements.txt /opt/Annotat3DWeb/requirements.txt
%post
    cd /
    pip3 --no-cache-dir install -r /opt/Annotat3DWeb/requirements.txt
    rm -rf /opt/Annotat3DWeb/requirements.txt

# pip
%files
    backend/requirements-dev.txt /opt/Annotat3DWeb/requirements-dev.txt
%post
    cd /
    pip3 --no-cache-dir install -r /opt/Annotat3DWeb/requirements-dev.txt
    rm -rf /opt/Annotat3DWeb/requirements-dev.txt

%post
    . $NVM_DIR/nvm.sh
    nvm install v$NODE_VERSION
    nvm alias default v$NODE_VERSION
    nvm use default

%post
    npm install -g ionic yarn serve

%post
    echo 'source $NVM_DIR/nvm.sh' >> /etc/bash.bashrc
