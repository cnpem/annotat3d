# 
# Annotat3DWeb Base Image
# 
# Contents:
#     Ubuntu version 20.04
#     NVIDIA CUDA version 11.2.0 including cuBLAS version 11.3.1
#     NVIDIA cuDNN version 8.1.0
#     NVIDIA NCCL version 2.8.4 (optimized for NVLink)
#     APEX
#     TensorBoard version 1.15.5
#     Nsight Compute version 2020.3.0.18
#     Nsight Systems version 2020.4.3.7
#     TensorRT version7.2.2.3+cuda11.1.0.024
#     DALI version 0.29.0
#     MAGMA version 2.5.2
#     DLProf version 0.19.0
#     PyProf version r21.02
#     OpenMPI version 4.0.5
#     GNU compilers version 8
#     Mellanox OFED version 5.1-2.5.8.0
#     HDF5 version 1.10.5
#     Anaconda version 23.1.0-1
#     Node version v20.12.2
#     Annotat3DWeb Dependencies
# 

BootStrap: docker
From: nvcr.io/nvidia/pytorch:21.02-py3
%post
    . /.singularity.d/env/10-docker*.sh

%labels
    br.lnls.gcd.mantainer GCD Team <gcd.lnls.br>
    br.lnls.gcd.release production
    br.lnls.gcd.version 21.02-py3

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        autoconf \
        autoconf-archive \
        automake \
        binutils \
        build-essential \
        bzip2 \
        ca-certificates \
        cmake \
        coreutils \
        curl \
        doxygen \
        environment-modules \
        expect \
        fontconfig \
        gdb \
        gfortran \
        git \
        gzip \
        ibacm \
        libgl1 \
        libgl1-mesa-dev \
        libglib2.0-0 \
        libnss3 \
        libssl-dev \
        libtool \
        libxss1 \
        make \
        openjdk-8-jdk \
        openssh-client \
        patch \
        pciutils \
        pkg-config \
        qperf \
        tar \
        tcl \
        unzip \
        vim \
        wget \
        xz-utils \
        zip
    rm -rf /var/lib/apt/lists/*

%environment
    export CUDA_HOME=/usr/local/cuda
    export CUDA_TOOLKIT_PATH=$CUDA_HOME
%post
    export CUDA_HOME=/usr/local/cuda
    export CUDA_TOOLKIT_PATH=$CUDA_HOME

%environment
    export CC=gcc
    export CXX=g++
%post
    export CC=gcc
    export CXX=g++

%environment
    export NODE_VERSION=20.12.2
    export NVM_DIR=/usr/local/nvm
%post
    export NODE_VERSION=20.12.2
    export NVM_DIR=/usr/local/nvm

%environment
    export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:$LIBRARY_PATH
    export NODE_PATH=$NVM_DIR/v$NODE_VERSION/lib/node_modules
    export PATH=/usr/local/cuda/bin:/usr/local/cuda/nvvm/bin:$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
%post
    export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:$LIBRARY_PATH
    export NODE_PATH=$NVM_DIR/v$NODE_VERSION/lib/node_modules
    export PATH=/usr/local/cuda/bin:/usr/local/cuda/nvvm/bin:$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

# GNU compiler
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        g++-8 \
        gcc-8 \
        gfortran-8
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    update-alternatives --install /usr/bin/g++ g++ $(which g++-8) 30
    update-alternatives --install /usr/bin/gcc gcc $(which gcc-8) 30
    update-alternatives --install /usr/bin/gcov gcov $(which gcov-8) 30
    update-alternatives --install /usr/bin/gfortran gfortran $(which gfortran-8) 30

# Mellanox OFED version 5.1-2.5.8.0
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ca-certificates \
        gnupg \
        wget
    rm -rf /var/lib/apt/lists/*
%post
    wget -qO - https://www.mellanox.com/downloads/ofed/RPM-GPG-KEY-Mellanox | apt-key add -
    mkdir -p /etc/apt/sources.list.d && wget -q -nc --no-check-certificate -P /etc/apt/sources.list.d https://linux.mellanox.com/public/repo/mlnx_ofed/5.1-2.5.8.0/ubuntu20.04/mellanox_mlnx_ofed.list
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ibverbs-providers \
        ibverbs-utils \
        libibmad-dev \
        libibmad5 \
        libibumad-dev \
        libibumad3 \
        libibverbs-dev \
        libibverbs1 \
        librdmacm-dev \
        librdmacm1
    rm -rf /var/lib/apt/lists/*

# HDF5 version 1.10.5
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        bzip2 \
        file \
        make \
        wget \
        zlib1g-dev
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    mkdir -p /opt/Annotat3DWeb && wget -q -nc --no-check-certificate -P /opt/Annotat3DWeb http://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.5/src/hdf5-1.10.5.tar.bz2
    mkdir -p /opt/Annotat3DWeb && tar -x -f /opt/Annotat3DWeb/hdf5-1.10.5.tar.bz2 -C /opt/Annotat3DWeb -j
    cd /opt/Annotat3DWeb/hdf5-1.10.5 &&  CC=gcc CXX=g++ F77=gfortran F90=gfortran FC=gfortran ./configure --prefix=/usr/local/hdf5 --enable-cxx --enable-fortran
    make -j$(nproc)
    make -j$(nproc) install
    rm -rf /opt/Annotat3DWeb/hdf5-1.10.5 /opt/Annotat3DWeb/hdf5-1.10.5.tar.bz2
%environment
    export CPATH=/usr/local/hdf5/include:$CPATH
    export HDF5_DIR=/usr/local/hdf5
    export LD_LIBRARY_PATH=/usr/local/hdf5/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/local/hdf5/lib:$LIBRARY_PATH
    export PATH=/usr/local/hdf5/bin:$PATH
%post
    export CPATH=/usr/local/hdf5/include:$CPATH
    export HDF5_DIR=/usr/local/hdf5
    export LD_LIBRARY_PATH=/usr/local/hdf5/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/local/hdf5/lib:$LIBRARY_PATH
    export PATH=/usr/local/hdf5/bin:$PATH

%post
    rm -rf /opt/conda

# Anaconda
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ca-certificates \
        wget
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    mkdir -p /opt/Annotat3DWeb && wget -q -nc --no-check-certificate -P /opt/Annotat3DWeb http://repo.anaconda.com/miniconda/Miniconda3-py39_23.1.0-1-Linux-x86_64.sh
    bash /opt/Annotat3DWeb/Miniconda3-py39_23.1.0-1-Linux-x86_64.sh -b -p /opt/conda
    /opt/conda/bin/conda init
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
    /opt/conda/bin/conda clean -afy
    rm -rf /opt/Annotat3DWeb/Miniconda3-py39_23.1.0-1-Linux-x86_64.sh

%post
    python3 -m pip config --user set global.extra-index-url http://gcc.lnls.br:3128
    python3 -m pip config --user set global.trusted-host gcc.lnls.br

# pip
%post
    cd /
    pip3 --no-cache-dir install pip==22.0.4 setuptools==69.0.3 wheel cmake==3.17.3 cython==0.29.30 cmake-setuptools SharedArray==3.2.0 nibabel blinker

# pip
%files
    backend/requirements.txt /opt/Annotat3DWeb/requirements.txt
%post
    cd /
    pip3 --no-cache-dir install -r /opt/Annotat3DWeb/requirements.txt
    rm -rf /opt/Annotat3DWeb/requirements.txt

# pip
%files
    backend/requirements-dev.txt /opt/Annotat3DWeb/requirements-dev.txt
%post
    cd /
    pip3 --no-cache-dir install -r /opt/Annotat3DWeb/requirements-dev.txt
    rm -rf /opt/Annotat3DWeb/requirements-dev.txt

%post
    . $NVM_DIR/nvm.sh
    nvm install v$NODE_VERSION --reinstall-packages-from=v15
    nvm uninstall v15
    nvm alias default v$NODE_VERSION
    nvm use default

%post
    npm install -g ionic yarn serve
